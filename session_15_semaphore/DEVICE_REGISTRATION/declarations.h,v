head	1.10;
access;
symbols;
locks
	rawat:1.10; strict;
comment	@ * @;


1.10
date	2020.02.11.07.21.53;	author rawat;	state Exp;
branches;
next	1.9;

1.9
date	2020.01.28.09.15.56;	author rawat;	state Exp;
branches;
next	1.8;

1.8
date	2020.01.23.05.18.08;	author rawat;	state Exp;
branches;
next	1.7;

1.7
date	2020.01.21.13.34.22;	author rawat;	state Exp;
branches;
next	1.6;

1.6
date	2020.01.20.08.51.15;	author rawat;	state Exp;
branches;
next	1.5;

1.5
date	2020.01.11.06.07.01;	author rawat;	state Exp;
branches;
next	1.4;

1.4
date	2020.01.09.12.23.18;	author rawat;	state Exp;
branches;
next	1.3;

1.3
date	2020.01.09.06.27.27;	author rawat;	state Exp;
branches;
next	1.2;

1.2
date	2020.01.09.06.09.06;	author rawat;	state Exp;
branches;
next	1.1;

1.1
date	2020.01.07.08.47.37;	author rawat;	state Exp;
branches;
next	;


desc
@@


1.10
log
@*** empty log message ***
@
text
@
#ifndef DEBUG
#define DEBUG
#endif

//this NOD=0  macro was used earlier to to have pre-user-defined no_of_devices
//but not used now since we are have no_of_devices as module_parameters(during runtime)
#ifndef NOD
#define NOD 
#endif

#ifndef MINOR_NO
#define MINOR_NO 0
#endif

#ifndef DEVICE_NAME
#define DEVICE_NAME "CDD__005"  
#endif

#ifndef DEBUG
#define DEBUG
#endif

#ifndef DEVSIZE
#define DEVSIZE 256
#endif

#ifndef DATASIZE
#define DATASIZE 0
#endif

#ifndef REGSIZE
#define REGSIZE 4
#endif

#ifndef NOOFREG
#define NOOFREG 8
#endif

extern int major_No,minor_No,nod;
extern dev_t device_id,dev_no;

extern int dataSize,devSize,regSize,noOfReg;

typedef struct qset
{
	struct qset *next;
	void **data;

}Qset;

typedef struct 
{
	struct qset *first;
	struct cdev c_dev;
	int dataSize;
	int devSize;
	int regSize;
	int noOfReg;
	struct semaphore sem;	
}Dev;
extern Dev *dev;

/******** IMPORTANT ************
 
int (*open) (struct inode *, struct file *);
	// here this  (*open) is a function pointer 
	// in funOps.h file we are pointing a user defined  function " openMyDev " to the 
	// kernel defined function_pointer " (*open) "
	// and below is that function,which is a pointer to that (*open)						
	//
	//	open: openMyDev    
	//

int (*release) (struct inode *, struct file *);
	// just same as above a user defined function " releaseMyDev " which is 
	// pointing to a kernel defined function_pointer " (*release) "
	//
	//	release: releaseMyDev
	//
**********************************/

int openMyDev (struct inode *, struct file *);
int releaseMyDev (struct inode *, struct file *);
int trimDev(Dev*);
Qset*  creatScull ( size_t size);
//ssize_t (*read) (struct file *, char __user *, size_t, loff_t *);
//ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *);

ssize_t readMyDev (struct file *, char __user *, size_t, loff_t *);
ssize_t writeMyDev (struct file *, const char __user *, size_t, loff_t *);

int  validIOCheck (struct file *, const char __user *, size_t);

//loff_t (*llseek) (struct file *, loff_t, int);
loff_t lseekDev (struct file *, loff_t, int);

@


1.9
log
@*** empty log message ***
@
text
@d60 1
a60 1
		
@


1.8
log
@*** empty log message ***
@
text
@d94 4
@


1.7
log
@*** empty log message ***
@
text
@d29 1
a29 1
#define DATASIZE 256
@


1.6
log
@*** empty log message ***
@
text
@d25 1
a25 1
#define DEVSIZE 0
@


1.5
log
@*** empty log message ***
@
text
@d2 38
d41 1
a41 2
extern int dev_no;
extern dev_t device_id;
d63 20
a82 1
	
d85 9
@


1.4
log
@*** empty log message ***
@
text
@d6 2
d19 5
a24 1

d26 3
@


1.3
log
@*** empty log message ***
@
text
@d3 1
a3 1
extern int b,a;
d5 15
@


1.2
log
@*** empty log message ***
@
text
@d3 1
@


1.1
log
@Initial revision
@
text
@d2 2
a3 1
struct file_operations fops={};
@
